#!/bin/bash

source "${ENV}/scripts/log.sh"
source "${ENV}/scripts/kconfig.sh"

if [ ! -f "${CFG}" ]; then
  echo "No configuration"
  exit 1;
fi

tool_prefix=`value TOOLCHAIN_PREFIX`

if selected TOOLCHAIN_CODESOURCERY_201203; then
  if [ "${tool_prefix}" = "arm-none-eabi-" ]; then
    tool_name="CodeSourcery ARM EABI 2012.03"
    tool_dir="arm-2012.03"
    tool_tar="arm-2012.03-56-arm-none-eabi-i686-pc-linux-gnu.tar.bz2"
    tool_url="https://sourcery.mentor.com/GNUToolchain/package10385/public/arm-none-eabi"
    tool_md5="f2fcb35a9e09b0f96e058a0176c80444"
  fi
elif selected TOOLCHAIN_CODESOURCERY_201209; then
  if [ "${tool_prefix}" = "arm-none-eabi-" ]; then
    tool_name="CodeSourcery ARM EABI 2012.09"
    tool_dir="arm-2012.09"
    tool_tar="arm-2012.09-63-arm-none-eabi-i686-pc-linux-gnu.tar.bz2"
    tool_url="https://sourcery.mentor.com/GNUToolchain/package10926/public/arm-none-eabi"
    tool_md5="d094880c6ac3aea16d4bfb88077186f7"
  fi
elif selected TOOLCHAIN_USER_DEFINED; then
  tool_name="Custom toolchain"
  tool_dir=`value TOOLCHAIN_DIRECTORY`
fi

if [ "$tool_prefix" = "undef" -o -z "${tool_dir}" -o "${tool_dir}" = "undef" ]; then
  echo "Unknown toolchain" >&2
  exit 1
fi

case $1 in
  setup)

    if [ -x "${ENV}/tools/${tool_dir}/bin/${tool_prefix}gcc" ]; then
      exit 0
    fi

    gcc="${ENV}/tools/${tool_dir}/bin/${tool_prefix}gcc"

    if [ -z "${tool_tar}" ]; then
      echo "Please manually setup your selected toolchain. GCC is expected to" >&2
      echo "exist here: ${gcc}" >&2
      exit 1
    fi

    if [ ! -f "${tool_tar}" -a -z "${tool_url}" ]; then
      echo "Please put ${tool_tar} in ${ENV}/tarballs to continue" >&2
      exit 1
    fi

    if [ ! -f "${ENV}/tarballs/${tool_tar}" ]; then
      mkdir -p "${ENV}/tarballs"
      download "${tool_name}" "${tool_url}/${tool_tar}" "${ENV}/tarballs/${tool_tar}"
    fi

    if [ ! -z "${tool_md5}" ]; then
      task_begin "Hash checking ${tool_name}"
      md5=`md5sum "${ENV}/tarballs/${tool_tar}" | cut -d ' ' -f 1`
      if [ "${md5}" != "${tool_md5}" ]; then
        fail "MD5 does not match for ${tool_tar}"
      fi
      task_end
    fi

    task_begin "Extracting ${tool_name}"
    try mkdir -p "${ENV}/tools"
    try cd "${ENV}/tools"
    try tar xaf "${ENV}/tarballs/${tool_tar}" || exit 1

    if [ ! -x "${gcc}" ]; then
      fail "Something went wrong... please report this issue"
    fi
    task_end
  ;;
  *)
    echo "export PATH=\"${ENV}/tools/${tool_dir}/bin:$PATH\""
    echo "export ARCH=\"`echo ${tool_prefix} | cut -d- -f1 | tr [a-z] [A-Z]`\""
    echo "export CROSS_COMPILE=\"${tool_prefix}\""
  ;;
   
esac


